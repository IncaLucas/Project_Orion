Num GPUs Available:  0
Num CPUs Available:  1
Num TPUs Available:  0
Loaded 360 sequences
Traceback (most recent call last):
  File "e:\Dev\Deakin\Project_Orion\DataScience\Models\Action Recognition\Train.py", line 109, in <module>
    TC.train_model()
  File "e:\Dev\Deakin\Project_Orion\DataScience\Models\Action Recognition\Train.py", line 94, in train_model
    self.model.add(LSTM(100, return_sequences=False,return_state=True,stateful=True))
  File "C:\Python310\lib\site-packages\tensorflow\python\trackable\base.py", line 205, in _method_wrapper
    result = method(self, *args, **kwargs)
  File "C:\Python310\lib\site-packages\keras\utils\traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "C:\Python310\lib\site-packages\keras\layers\rnn\base_rnn.py", line 873, in reset_states
    raise ValueError(
ValueError: If a RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors:
- If using a Sequential model, specify the batch size by passing a `batch_input_shape` argument to your first layer.
- If using the functional API, specify the batch size by passing a `batch_shape` argument to your Input layer.